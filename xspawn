#!/bin/bash

if [ -z "$PSPAWN_DIR" ]; then
    PSPAWN_DIR=$(dirname `realpath $0`)
fi

conf="$PSPAWN_DIR/pspawn_data/pspawn.conf"

if [ -e "$conf" ]; then
    source "$conf"
fi

confx="$PSPAWN_DIR/pspawn_data/xspawn.conf"

if [ -e "$confx" ]; then
    source "$confx"
fi

if [ -z "$XSPAWN_INSTALL_SCRIPT" ]; then
    XSPAWN_INSTALL_SCRIPT="usermod -a -G sudo ubuntu; which startxfce4 || (apt-get -y update && apt-get -y install xfce4)"
fi

if [ -z "$XSPAWN_XSESSION_SCRIPT" ]; then
    XSPAWN_XSESSION_SCRIPT="sudo -u ubuntu -i xfce4-session"
fi

if [ -z "$XSPAWN_X_SERVER_PRIVILEGED" ]; then
    XSPAWN_X_SERVER_PRIVILEGED="$(groups `id -un` | grep -q '[ ^]sudo[ $]' || test "$UID" = "0" && echo y || echo n)"
fi

if [ -z "$XSPAWN_X_SERVER_COMMAND_PRIVILEGED" ]; then
    XSPAWN_X_SERVER_COMMAND_PRIVILEGED="/usr/bin/Xorg :2001 vt12 -logfile /dev/null"
fi

if [ -z "$XSPAWN_X_SERVER_COMMAND" ]; then
    XSPAWN_X_SERVER_COMMAND="/usr/bin/Xephyr :2001 -resizeable"
fi

DATA_DIR="$PSPAWN_DIR/pspawn_data"

set -e

fail() {
    echo "$@" >&2
    exit 1
}

# we don't want anyone snooping around our activities, so we avoid logging sudo commands
subash() {
    wd=${PSPAWN_DIR}
    cd "$HOME"
    if tty > /dev/null; then
        stdin=`tty`
    else
        stdin='/dev/null'
    fi
    echo "set -e ; cd $wd ;" "$@" "< $stdin" | sudo /bin/bash
    cd "$wd"
}

pspawn() {
    $PSPAWN_DIR/pspawn "$@"
    return $?
}

fstab="$PSPAWN_DIR/xspawn.fstab"
lxc_conf="$PSPAWN_DIR/xspawn.lxc.conf"
rootfs=`$PSPAWN_DIR/pspawn root`

echo '# Do not modify' > $fstab
echo '/tmp/.X11-unix tmp/.X11-unix none bind,create=dir 0 0' >> $fstab

echo '# Do not modify' > $lxc_conf

export PSPAWN_LXC_START_ARGS_EXTRA="-s lxc.mount.fstab=$fstab -s lxc.include=$lxc_conf $PSPAWN_LXC_START_ARGS_EXTRA"

stop_lxc="n"

do_cleanup() {
    set +e

    if [ "$stop_lxc" = "y" ]; then
        echo Stopping LXC container ...

        if ! pspawn stop -t 30; then
            echo Failed to stop, killing ...

            pspawn stop -k
        fi
    fi
}

trap do_cleanup EXIT

if ! test "$($PSPAWN_DIR/pspawn info -sH)" = "RUNNING"; then
    echo LXC container is not running, starting it ...

    pspawn start || exit 1

    stop_lxc="y"

    pspawn wait -s RUNNING -t 30 || fail It\'s not yet running
fi

test "$($PSPAWN_DIR/pspawn info -sH)" = "RUNNING" || fail Container is not running

lxc_br_ip=$(ip -f inet -o addr show lxcbr0|cut -d\  -f 7 | cut -d/ -f 1)

timeout 30 $PSPAWN_DIR/pspawn attach -- bash -c 'while ! ping -c 1 -W 1 '${lxc_br_ip}'; do sleep 1; done' &> /dev/null || fail container was unable to configure networking

if [ ! -z "$XSPAWN_INSTALL_SCRIPT" ]; then
    echo checking xfce4 installation
    echo "$XSPAWN_INSTALL_SCRIPT" | pspawn attach -- /bin/bash
fi

client="$DATA_DIR/xsession"

echo "echo Starting X session \$(pwd) ... ; $PSPAWN_DIR/pspawn attach --keep-var=DISPLAY -- $XSPAWN_XSESSION_SCRIPT ; echo X Session finished" > "$client"
chmod +x "$client"

if [ "$XSPAWN_X_SERVER_PRIVILEGED" = "y" ]; then
    subash xinit "$client" -- $XSPAWN_X_SERVER_COMMAND_PRIVILEGED < /dev/null 2>&1 | cat
else
    xinit "$client" -- $XSPAWN_X_SERVER_COMMAND < /dev/null 2>&1 | cat
fi
